{"version":3,"sources":["context/index.js","components/stage1.js","components/stage2.js","App.js","index.js"],"names":["MyContext","React","createContext","MyProvider","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","stage","players","result","addPlayerHandler","name","setState","prevState","toConsumableArray","removePlayerHandler","idx","newArray","splice","nextHandler","toast","error","position","POSITION","TOP_LEFT","autoClose","setTimeout","generateLooser","Math","floor","random","resetGame","inherits","createClass","key","value","react_default","a","createElement","Fragment","Provider","addPlayer","removePlayer","next","getNewLooser","props","children","react_toastify_esm","Component","Stage1","textInput","useRef","context","useContext","_useState","useState","_useState2","slicedToArray","setError","validateInput","Form","onSubmit","e","preventDefault","current","className","Group","Control","type","placeholder","ref","Alert","Button","variant","map","player","onClick","Stage2","App","stage1","stage2","ReactDOM","createRoot","document","getElementById","render","StrictMode","context_MyProvider","src_App"],"mappings":"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","file":"static/js/main.97d7aabd.chunk.js","sourcesContent":["import React,{ Component } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify'\r\n\r\nconst MyContext = React.createContext();\r\n\r\n\r\nclass MyProvider extends Component {\r\n\r\n    state = {\r\n        stage:1,\r\n        players:[],\r\n        result:''\r\n    }\r\n\r\n    addPlayerHandler = (name) =>{\r\n        this.setState((prevState)=>({\r\n            players:[\r\n                ...prevState.players,\r\n                name\r\n            ]\r\n        }))\r\n    }\r\n\r\n    removePlayerHandler = (idx) => {\r\n        let newArray = this.state.players;\r\n        newArray.splice(idx,1);\r\n        this.setState({players:newArray});\r\n    }\r\n\r\n    nextHandler = () =>{\r\n        const { players } = this.state;\r\n\r\n        if(players.length < 2){\r\n            \r\n            toast.error('You need more than one player',{\r\n                position: toast.POSITION.TOP_LEFT,\r\n                autoClose:2000\r\n            });\r\n        } else {\r\n            this.setState({\r\n                stage:2\r\n            },()=>{\r\n                setTimeout(()=>{\r\n                    this.generateLooser()\r\n                },2000)\r\n            })\r\n        }\r\n    }\r\n\r\n    generateLooser = () => {\r\n        const { players } = this.state;\r\n        this.setState({\r\n            result: players[Math.floor(Math.random()*players.length)]\r\n        })\r\n    }\r\n    \r\n    resetGame = () => {\r\n        this.setState({\r\n            stage:1,\r\n            players:[],\r\n            result:''\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <MyContext.Provider value={{\r\n                    state: this.state,\r\n                    addPlayer: this.addPlayerHandler,\r\n                    removePlayer: this.removePlayerHandler,\r\n                    next: this.nextHandler,\r\n                    getNewLooser: this.generateLooser,\r\n                    resetGame: this.resetGame\r\n                }}>\r\n                    {this.props.children}\r\n                </MyContext.Provider>\r\n                <ToastContainer/>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport {\r\n    MyContext,\r\n    MyProvider\r\n}","import React,{ useState, useContext, useRef } from 'react'\r\nimport { Button, Form, Alert } from 'react-bootstrap'\r\n\r\nimport { MyContext } from '../context'\r\n\r\nconst Stage1 = () => {\r\n    const textInput = useRef();\r\n    const context = useContext(MyContext);\r\n    const [error,setError] = useState([false,''])\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const value = textInput.current.value;\r\n        const validate = validateInput(value);\r\n\r\n        if(validate){\r\n            setError([false,''])\r\n            context.addPlayer(value)\r\n            textInput.current.value = '';\r\n        }\r\n    }\r\n\r\n    const validateInput = (value) => {\r\n        if(value === ''){\r\n            setError([true,'Sorry, you need to add something'])\r\n            return false\r\n        }\r\n        if(value.length <= 2){\r\n            setError([true,'Sorry, you need 3 char at least'])\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Form onSubmit={handleSubmit} className=\"mt-4\">\r\n                <Form.Group>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Add player name'\r\n                        name='player'\r\n                        ref={textInput}\r\n                    />\r\n                </Form.Group>\r\n\r\n                { error[0] ?\r\n                    <Alert>\r\n                        {error[1]}\r\n                    </Alert>\r\n                :null}   \r\n\r\n                <Button className='miami' variant='primary' type='submit'>\r\n                    Add player\r\n                </Button>\r\n                { context.state.players && context.state.players.length > 0 ?\r\n                <>\r\n                    <hr/>\r\n                    <div>\r\n                        <ul className='list-group'>\r\n                            { context.state.players.map((player,idx)=>(\r\n                                <li key={idx} className=\"list-group-item d-flex justify-content-between align-items-center list-group-item-action\">\r\n                                    {player}\r\n                                    <span\r\n                                        className='badge badge-danger'\r\n                                        onClick={()=> context.removePlayer(idx)}\r\n                                    >\r\n                                        X\r\n                                    </span>\r\n                                </li>\r\n                            ))\r\n                            }\r\n                        </ul>\r\n                        <div \r\n                            className='action_button'\r\n                            onClick={()=> context.next()}\r\n                        >\r\n                            NEXT\r\n                        </div>\r\n                    </div>\r\n                </>\r\n                :null}\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Stage1;","import React,{ useContext } from 'react'\r\nimport { MyContext } from '../context'\r\n\r\nconst Stage2 = () => {\r\n    const context = useContext(MyContext);\r\n\r\n    return(\r\n        <>\r\n           <div className='result_wrapper'>\r\n                <h3>The looser is:</h3>\r\n                <div>{context.state.result}</div>\r\n           </div>\r\n           <div\r\n            className='action_button'\r\n            onClick={()=> context.resetGame()}\r\n           >\r\n               START OVER\r\n           </div>\r\n           <div\r\n            className='action_button btn_2'\r\n            onClick={()=> context.getNewLooser()}\r\n           >\r\n               GET NEW LOOSER\r\n           </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Stage2;","import React,{ useContext } from 'react'\nimport { MyContext } from './context'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './style/app.css'\n\n\nimport Stage1 from \"./components/stage1\";\nimport Stage2 from \"./components/stage2\";\n\nconst App = () => {\n  const context = useContext(MyContext)\n\n  return(\n    <div className=\"wrapper\">\n      <div className=\"center-wrapper\">\n        <h1>Who pays the bill ?</h1>\n        { context.state.stage === 1 ?\n          <Stage1/>\n          :\n          <Stage2/>\n        }\n      </div>\n    </div>\n  )\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nimport { MyProvider } from './context'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <MyProvider>\n      <App />\n    </MyProvider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}